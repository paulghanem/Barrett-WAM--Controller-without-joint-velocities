function params = exTestGraspSetup()
%EXTESTGRASPSETUP Summary of this function goes here
%   Detailed explanation goes here

    global tformInfo;
    global arm_ready;
    global arm_home_norest;
    
    grasp_plan_directory = 'C:\Users\robotics\Documents\MATLAB\wam_controller\WAM7DOF\GraspPlans\';
    %grasp_plan_directory = 'C:\Users\robotics\Documents\MATLAB\wam_controller\matlab_graspit_interface\matlab\graspplan\'
    %grasp_plan_directory = '/home/emma/HarrisProject/HarrisRPI/trunk/matlab_graspit_interface/matlab/graspplan/';
    robotid = orEnvGetBody('BarrettWAM');
    real_execution_mode = true;
    %grasp_plan_filename = 'rabbit.txt';
    %grasp_plan_filename = 'planresult_Perception_Scenario_1.txt'; % Brick
    grasp_plan_filename = 'planresult_Perception_Scenario_2.txt'; % Hat
    %grasp_plan_filename = 'planresult_Perception_Scenario_3.txt'; %Tumbler
    %grasp_plan_filename = 'planresult_Perception_Scenario_4.txt'; %Cinder block
    %grasp_plan_filename = 'planresult_Perception_Scenario_5.txt'; % % Brick
    %grasp_plan_filename = 'planresult_Perception_Scenario_6.txt'; % Hat
<<<<<<< .mine
    %grasp_plan_filename = 'planresult_Perception_Scenario_6_new.txt';
=======
    grasp_plan_filename = 'planresult_Perception_Scenario_7_new.txt';
>>>>>>> .r122
    %grasp_plan_filename = 'cube_grasp_plan.txt';
    
    %grasp_plan_filename = 'fingertip_touch_graspplans.txt';
    %grasp_plan_filename = 'left_finger_back_touch_graspplans.txt';
    %grasp_plan_filename = 'left_finger_touch_graspplans.txt';
    %grasp_plan_filename = 'palm_touch_graspplans.txt';
    %grasp_plan_filename = 'right_finger_back_touch_graspplans.txt';
    %grasp_plan_filename = 'right_finger_touch_graspplans.txt';
                           
    
    full_grasp_plan_name = strcat(grasp_plan_directory,grasp_plan_filename);
    
    %ttProjectFile = '/home/emma/HarrisProject/Controller/wam_controller/CameraCalibrations/Project20120209.ttp';
    ttProjectFile = 'C:\Users\robotics\Documents\MATLAB\wam_controller\CameraCalibrations\Project20120209.ttp';
    
    waypointIndex = 1;
    
    [ objectid planStruct object_T plotIDs ] = exVisualizeGraspPlan(full_grasp_plan_name,tformInfo,ttProjectFile,waypointIndex);

    
    id = input('Enter pregrasp id to execute\n');
    qi = [arm_ready'; 0; 0];

    if ~real_execution_mode
        for i = 1:planStruct.plans(id).nPts
            TobjTip = planStruct.plans(id).waypoints(i).Htransform;
            pregraspT = object_T * TobjTip
            [~, qip1] = wam7ik_w_joint_limits(pregraspT, qi(1:7));
            qip1 = [qip1; 0; planStruct.plans(id).waypoints(i).gripWidth];
            TRAJ = jointSpaceTraj(qi,qip1);
            exDisplayTrajectory(1,TRAJ,3);
            qi = qip1;
        end
    else
        % create problem instances
        probs.cbirrt = orEnvCreateProblem('CBiRRT','BarrettWAM');
        % set display options
        orEnvSetOptions('debug 3')
        orEnvSetOptions('collision ode')

        qi = [arm_ready'; 0; 0.100];
        orRobotSetDOFValues(robotid, qi, 0:8);
        %get the descriptions of the robot's manipulators
        manips = orRobotGetManipulators(robotid);
        orRobotSetActiveDOFs(robotid, manips{1}.armjoints);
        for i = 1:planStruct.plans(id).nPts
            TobjTip = planStruct.plans(id).waypoints(i).Htransform;
            pregraspT = object_T * TobjTip;
            switch i
                case 1
                    try
                    [~, TRAJ, ~] = orTrajPlanningHelper(pregraspT, probs.cbirrt);
                    catch e
                        disp('Trajectory planner cannot find a solution.')
                        break;
                    end
                    gripper_TRAJ = jointSpaceTraj(qi(end), planStruct.plans(id).waypoints(i).gripWidth, size(TRAJ, 2));
                    TRAJ = [TRAJ; zeros(1, size(TRAJ, 2)); gripper_TRAJ];
                    qip1 = TRAJ(:, end);
                case 2
                    [ valid, TRAJ ] = wam7_straightline_traj_gen(qi(1:7), pregraspT);
                    if valid
                        gripper_TRAJ = jointSpaceTraj(qi(end), planStruct.plans(id).waypoints(i).gripWidth, size(TRAJ, 2));
                        TRAJ = [TRAJ; zeros(1, size(TRAJ, 2)); gripper_TRAJ];
                        qip1 = TRAJ(:, end);
                    else
                        disp('Trajectory planner cannot find a solution.')
                        break;
                    end 
                case 3
                    [~, qip1] = wam7ik_w_joint_limits(pregraspT, qi(1:7));
                    qip1 = [qip1; 0; planStruct.plans(id).waypoints(i).gripWidth];
                    TRAJ = jointSpaceTraj(qi, qip1);
                case 4
                    [~, qip1] = wam7ik_w_joint_limits(pregraspT, qi(1:7));
                    qip1 = [qip1; 0; planStruct.plans(id).waypoints(i).gripWidth];
                    TRAJ = jointSpaceTraj(qi, qip1);
                case 5
                    [ valid, TRAJ ] = wam7_straightline_traj_gen(qi(1:7), pregraspT);
                    if valid
                        gripper_TRAJ = jointSpaceTraj(qi(end), planStruct.plans(id).waypoints(i).gripWidth, size(TRAJ, 2));
                        TRAJ = [TRAJ; zeros(1, size(TRAJ, 2)); gripper_TRAJ];
                        qip1 = TRAJ(:, end);
                    else
                        disp('Trajectory planner cannot find a solution.')
                        break;
                    end 
                otherwise
                    [~, qip1] = wam7ik_w_joint_limits(pregraspT, qi(1:7));
                    qip1 = [qip1; 0; planStruct.plans(id).waypoints(i).gripWidth];
                    TRAJ = jointSpaceTraj(qi, qip1);
            end
            exDisplayTrajectory(1,TRAJ,3);
            qi = qip1;
        end
    end
    
    input('\nPress [Enter] to cleanup visualization');
    orEnvClose(plotIDs);
    orBodyDestroy(objectid);
    orRobotSetDOFValues(robotid,[arm_home_norest(:)' 0 0], 0:8); % Assuming that the robotid is 1
    delete 'cmovetraj.txt';
    params.planName = full_grasp_plan_name;
    params.planToRun = id;
    
end


